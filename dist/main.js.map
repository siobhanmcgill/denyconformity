{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-list/post-list.component.ts","./src/app/post-list/post-list.component.html","./src/app/post-series/post-series.component.ts","./src/app/post-series/post-series.component.html","./src/app/post-survey/post-survey.component.ts","./src/app/post-survey/post-survey.component.html","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/read-post/read-post.component.ts","./src/app/read-post/read-post.component.html","./src/app/services/csrf.interceptor.ts","./src/app/services/post-list-state.service.ts","./src/app/services/post.service.ts","./src/app/shared/anim.ts","./src/app/shared/const.ts","./src/app/shared/markdown-service.service.ts","./src/app/shared/scroll-tracker.directive.ts","./src/app/shared/shared.module.ts","./src/app/shared/ui.util.ts","./src/app/shared/unsafe-inner-html.directive.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PostListComponent} from './post-list/post-list.component';\nimport {POST_PREFIX} from './shared/const';\n\n/**\n * Legacy routes:\n *\n * /content/:type > ignore\n *\n * /about > post 427\n * /about/comments > post 427\n *\n * /post/:slug\n * /post/:slug/[next|prev]\n * /post/:slug/comments\n *\n * /id/:slug > /post/:slug\n * /cid/:cid > ignore\n *\n * /tags\n * /tags/:tag\n * /tags/:tag/page/:page\n *\n * /page/:page\n *\n * /post/:slug/gallery\n *\n *\n * legacy query strings:\n * id\n * cid\n * tags\n * page\n * raw\n * srch\n * search\n * com\n */\n\nconst routes: Routes = [\n  {\n    path: 'posts',\n    component: PostListComponent,\n  },\n  {\n    path: 'posts/:slug',\n    component: PostListComponent,\n  },\n  {\n    // For functionality including next / prev or comments, and book, or gallery\n    // modes.\n    path: 'posts/:slug/:command',\n    component: PostListComponent,\n  },\n  {\n    // Show a list of the posts for a series.\n    path: 'series/:seriesSlug',\n    component: PostListComponent,\n  },\n  {\n    path: 'about',\n    redirectTo: POST_PREFIX + '/about-denyconformitycom',\n  },\n  {\n    // Legacy URLs from the 2012 version of the site.\n    path: 'post/:slug',\n    redirectTo: POST_PREFIX + '/:slug',\n    pathMatch: 'full',\n  },\n  {\n    path: 'post/:slug/:command',\n    redirectTo: POST_PREFIX + '/:slug/:command',\n    pathMatch: 'full',\n  },\n  {\n    path: 'id/:slug',\n    redirectTo: POST_PREFIX + '/:slug',\n    pathMatch: 'full',\n  },\n  {\n    // For a hot minute I considered p instead of posts.\n    path: 'p/:slug',\n    redirectTo: POST_PREFIX + '/:slug',\n    pathMatch: 'full',\n  },\n  {\n    path: '',\n    redirectTo: POST_PREFIX,\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import {Location} from '@angular/common';\nimport {ChangeDetectionStrategy, Component, ElementRef, ViewChild} from '@angular/core';\nimport {fromEvent} from 'rxjs';\nimport {map, throttleTime} from 'rxjs/operators';\nimport {PostService} from './services/post.service';\n\n\nconst SCROLL_POS_WHEN_BG_GONE = 500;\nconst BG_PARALLAX_POS = SCROLL_POS_WHEN_BG_GONE * .125;\nconst BG_STARTING_OPACITY = .4;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  @ViewChild('bgImage') bgImage: ElementRef<HTMLImageElement>;\n  @ViewChild('logo') logoImage: ElementRef<HTMLImageElement>;\n\n  year = (new Date()).getFullYear();\n\n  constructor(\n      private readonly postService: PostService,\n      private readonly location: Location,\n  ) {\n    fromEvent(window, 'scroll')\n        .pipe(throttleTime(33), map(e => {\n                return window.scrollY;\n              }))\n        .subscribe(pos => {\n          // This timeout should make scrolling a bit smoother.\n          setTimeout(() => {\n            const ratio = pos / SCROLL_POS_WHEN_BG_GONE;\n            const bgPos = -(BG_PARALLAX_POS * ratio);\n            const opacity = BG_STARTING_OPACITY - (BG_STARTING_OPACITY * ratio);\n\n            if (this.bgImage) {\n              this.bgImage.nativeElement.style.top = bgPos + 'px';\n              this.bgImage.nativeElement.style.opacity = String(opacity);\n            }\n\n            if (this.logoImage) {\n              this.logoImage.nativeElement.style.top = bgPos + 'px';\n            }\n          });\n        });\n  }\n}\n","<div class=\"bg-image\">\n  <img src=\"https://storage.cloud.google.com/denyconformity_assets/backgrounds/2020_1.jpg\"\n       #bgImage />\n</div>\n\n<div class=\"logo\">\n  <img src=\"https://storage.cloud.google.com/denyconformity_assets/111webassets/2020_logo.png\"\n       #logo />\n</div>\n\n<router-outlet></router-outlet>\n\n<footer>\n  <span>&copy; {{year}} DenyConformity.com</span>\n  <span>Created by Siobhan McGill</span>\n  <span>\n    <div class=\"flag\"></div>\n  </span>\n</footer>\n","import {HTTP_INTERCEPTORS, HttpClientModule, HttpClientXsrfModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PostListComponent} from './post-list/post-list.component';\nimport {PostSeriesComponent} from './post-series/post-series.component';\nimport {PostComponent} from './post/post.component';\nimport {CsrfInterceptor} from './services/csrf.interceptor';\nimport {SharedModule} from './shared/shared.module';\nimport { ReadPostComponent } from './read-post/read-post.component';\nimport { PostSurveyComponent } from './post-survey/post-survey.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostListComponent,\n    PostSeriesComponent,\n    ReadPostComponent,\n    PostSurveyComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions(\n        {cookieName: 'csrftoken', headerName: 'X-CSRFToken'}),\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CsrfInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Location} from '@angular/common';\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {BehaviorSubject, combineLatest} from 'rxjs';\nimport {shareReplay, switchMap, tap} from 'rxjs/operators';\n\nimport {PostListItem, PostListStateService} from '../services/post-list-state.service';\nimport {PostService} from '../services/post.service';\nimport {Post, Series} from '../services/types';\nimport {createToggle} from '../shared/anim';\nimport {POST_PREFIX, SERIES_PREFIX} from '../shared/const';\nimport {MarkdownServiceService} from '../shared/markdown-service.service';\n\n/**\n *  We can make a custom right click menu for posts, to copy url, open\n * in a new tab, etc. Also it should be possible to manually create a method of\n * \"ctrl + click\" to open a post in a new tab.\n *\n * -Siobhan\n */\n\n\n/** Shows a list of posts, as determined by the PostListState service. */\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    createToggle({\n      name: 'spacer',\n      outStyle: {'height': '0'},\n      inStyle: {'height': '*'},\n      durationMs: 500\n    }),\n    createToggle({\n      name: 'title',\n      outStyle: {'height': '0', 'padding': '0', 'opacity': '0'},\n      inStyle: {'height': '*', 'padding': '*', 'opacity': '1'},\n      durationMs: 500\n    }),\n    createToggle({\n      name: 'postTitle',\n      outStyle: {'transform': 'translateY(-100%)', 'height': '0'},\n      inStyle: {'transform': 'translateY(0)', 'height': '*'},\n      durationMs: 500\n    }),\n    createToggle({\n      name: 'post',\n      outStyle:\n          {'overflow': 'hidden', 'height': '0', 'margin': '0', 'opacity': '0'},\n      inStyle: {'height': '*', 'margin': '*', 'opacity': '1'},\n      durationMs: 500\n    }),\n  ]\n})\nexport class PostListComponent {\n  postToRead?: Post;\n\n  isLoading = true;\n\n  isPostSelected() {\n    return !!this.service.selectedPostId;\n  }\n\n  constructor(\n      private readonly service: PostListStateService,\n      private readonly postService: PostService,\n      private readonly location: Location,\n      private readonly route: ActivatedRoute,\n      private readonly markdownService: MarkdownServiceService,\n  ) {}\n\n  posts$ = this.route.params.pipe(\n      switchMap(params => {\n        this.isLoading = true;\n        let slug = null;\n        let seriesSlug = null;\n        if (params && (params.slug || params.post)) {\n          slug = params.slug || params.post;\n        } else if (params && params.seriesSlug) {\n          seriesSlug = params.seriesSlug;\n        }\n        return this.service.init(slug, seriesSlug);\n      }),\n      tap(l => {\n        this.isLoading = !!l;\n      }));\n\n  private readonly tripleMoon$ = this.postService.getTripleMoon();\n  private readonly randomComedy$ =\n      this.postService.getRandomPostByTag('comedy');\n  private readonly randomOther$ =\n      this.postService.getRandomPostByTag('fiction');\n\n  linkyTitles = ['hot', 'funny', 'else'];\n\n  private readonly reloadLinkies$ = new BehaviorSubject<boolean>(true);\n  readonly linkies$ = this.reloadLinkies$.pipe(\n      switchMap(\n          () => combineLatest(\n              [this.tripleMoon$, this.randomComedy$, this.randomOther$])),\n      shareReplay({\n        refCount: true,\n        bufferSize: 1,\n      }),\n      tap(() => {\n        setTimeout(() => {\n          this.refreshLinks();\n        }, 20000);\n      }));\n\n  refreshLinks() {\n    this.reloadLinkies$.next(true);\n  }\n\n  linkiesTrackBy(i: number) {\n    return i;\n  }\n\n  renderLinkSummary(post: Post) {\n    const html = this.markdownService.renderPostText(post, 'summary');\n    return html.replace(/<img(.*)>/gi, '[Image]');\n  }\n\n  fetchNextPage() {\n    this.isLoading = true;\n    this.service.nextPage();\n  }\n\n  private getPostOrSeriesUrl(item: Post|Series): string {\n    if ((item as Series).description) {\n      const series = item as Series;\n      return `${SERIES_PREFIX}/${series.slug}`;\n    } else {\n      const post = item as Post;\n      if (this.service.selectedPostId !== post.id) {\n        return `${POST_PREFIX}/${post.slug}`;\n      }\n    }\n    return '';\n  }\n\n  selectPost(event: MouseEvent, item: Post|Series) {\n    const url = this.getPostOrSeriesUrl(item);\n    if (url) {\n      this.location.go(url);\n    }\n  }\n\n  postMouseDown(event: MouseEvent, item: Post|Series) {\n    // Prevent middle clicks on posts from doing the little scroll thingie.\n    if (event.which === 2) {\n      event.stopPropagation();\n      return false;\n    }\n  }\n\n  postMouseUp(event: MouseEvent, item: Post|Series) {\n    // On middle click, open the post in a new tab.\n    if (event.which === 2) {\n      event.stopPropagation();\n      const url = this.getPostOrSeriesUrl(item);\n      if (url) {\n        window.open(url);\n      }\n      return false;\n    }\n  }\n\n  home() {\n    this.location.go(POST_PREFIX);\n  }\n\n  listItemTrackBy(index: number, item: PostListItem): string {\n    if (item.post) {\n      return 'post' + item.post.id;\n    } else if (item.series) {\n      return 'series' + item.series.id;\n    } else if (item.type === 'loadmore') {\n      return 'load-page-' + item.page;\n    } else {\n      return item.type;\n    }\n  }\n\n  openPostToRead(post: Post) {\n    this.postToRead = post;\n  }\n\n  closePostToRead() {\n    this.postToRead = null;\n  }\n}\n","<div class=\"post-page-title\"\n     [@postTitle]\n     *ngIf=\"isPostSelected()\">\n  <h1 (click)=\"home()\">DenyConformity.com</h1>\n</div>\n\n<app-post-series></app-post-series>\n\n<div class=\"spacer\"></div>\n\n<div class=\"content\">\n  <div class=\"title\"\n       [@title]\n       *ngIf=\"!isPostSelected()\">\n    <h1>DenyConformity.com</h1>\n    <div class=\"subtitle\">\n      <div class=\"hr\"></div>\n      <div class=\"hr\"></div>\n      <h3>a very interesting website place.</h3>\n    </div>\n  </div>\n\n  <div class=\"post-list\"\n       *ngIf=\"posts$ | async as listItems; else loading\">\n    <ng-container *ngIf=\"listItems[0] as listItem\">\n      <div *ngIf=\"listItem.series\"\n           [@title]\n           class=\"series-summary\">\n        <h2>{{listItem.series.name}}</h2>\n        <p>{{listItem.series.description}}</p>\n        <span class=\"entry-count\">\n          <h3>{{listItem.series.posts.length}} posts</h3>\n        </span>\n      </div>\n\n      <app-post *ngIf=\"listItem.post\"\n                [post]=\"listItem.post\"\n                [@post]\n                (click)=\"selectPost($event, listItem.post)\"\n                (mousedown)=\"postMouseDown($event, listItem.post)\"\n                (mouseup)=\"postMouseUp($event, listItem.post)\"\n                (read)=\"openPostToRead($event)\"></app-post>\n\n      <div class=\"quick-links\"\n           *ngIf=\"listItem.post && !isPostSelected()\">\n        <div class=\"link-wrapper\"\n             *ngIf=\"linkies$ | async as links; else loadingLinks\"\n             [@post]>\n          <div class=\"link\"\n               [@post]\n               *ngFor=\"let link of links; index as i; trackBy: linkiesTrackBy\"\n               (click)=\"selectPost($event, link)\"\n               (mousedown)=\"postMouseDown($event, link)\"\n               (mouseup)=\"postMouseUp($event, link)\">\n            <h4>something {{linkyTitles[i]}}</h4>\n            <h2 [innerHtml]=\"link.title ?? link.name\"></h2>\n            <div class=\"link-summary\"\n                 *ngIf=\"link.description\">\n              <p>{{link.description}}</p>\n            </div>\n            <div class=\"link-summary\"\n                 *ngIf=\"link.summary\"\n                 [unsafeInnerHTML]=\"renderLinkSummary(link)\"></div>\n            <div class=\"date\">{{link.summary ? 'from' : 'updated'}} {{link.time | date}}</div>\n          </div>\n        </div>\n        <ng-template #loadingLinks>\n          <h3 class=\"heading\">loading quick links</h3>\n        </ng-template>\n      </div>\n    </ng-container>\n\n    <ng-container *ngFor=\"let listItem of listItems.slice(1); index as i; trackBy: listItemTrackBy\">\n\n      <div *ngIf=\"listItem.series\"\n           [@title]\n           class=\"series-summary\">\n        <h2>{{listItem.series.name}}</h2>\n        <p>{{listItem.series.description}}</p>\n        <span class=\"entry-count\">\n          <h3>{{listItem.series.posts.length}} posts</h3>\n        </span>\n      </div>\n\n      <app-post *ngIf=\"listItem.post\"\n                [post]=\"listItem.post\"\n                [@post]\n                (click)=\"selectPost($event, listItem.post)\"\n                (mousedown)=\"postMouseDown($event, listItem.post)\"\n                (mouseup)=\"postMouseUp($event, listItem.post)\"\n                (read)=\"openPostToRead($event)\"></app-post>\n\n      <span class=\"scroll-tracker loading\"\n            *ngIf=\"listItem.type === 'loadmore'\"\n            [scrollTracker]\n            (appear)=\"fetchNextPage()\">\n        Loading more . . .\n      </span>\n\n      <span class=\"loading\"\n            *ngIf=\"listItem.type === 'similars_loading'\">\n        Loading similar posts . . .\n      </span>\n\n      <div class=\"similar-heading\"\n           *ngIf=\"listItem.type === 'similar_heading'\">\n        <h3>Some other content that may or may not be relevant:</h3>\n      </div>\n\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #loading>\n  <div class=\"loading\">\n    Loading . . .\n  </div>\n</ng-template>\n\n<app-read-post *ngIf=\"postToRead\"\n               [post]=\"postToRead\"\n               (close)=\"closePostToRead()\"></app-read-post>\n","import {Location} from '@angular/common';\nimport {ChangeDetectorRef, Component, HostBinding, Input} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {PostListStateService} from '../services/post-list-state.service';\nimport {PostService} from '../services/post.service';\nimport {Post, Series} from '../services/types';\nimport {createToggle} from '../shared/anim';\nimport {SERIES_PREFIX} from '../shared/const';\n\nconst MOBILE_WIDTH = 500;\n\n@Component({\n  selector: 'app-post-series',\n  templateUrl: './post-series.component.html',\n  styleUrls: ['./post-series.component.scss'],\n  animations: [createToggle({\n    name: 'series',\n    outStyle: {'margin-top': '-100px'},\n    inStyle: {'margin-top': '*'},\n    durationMs: 300\n  })],\n})\nexport class PostSeriesComponent {\n  @Input() extended = false;\n\n  // post?: Post;\n  // seriesSubscription?: Subscription;\n  // series?: Series;\n\n  series$: Observable<Series|null>;\n  post$: Observable<Post|null>;\n\n  @HostBinding('className')\n  get className(): string {\n    return this.extended ? '' : 'content';\n  }\n\n  postClassName = '';\n  // get postClassName(): string {\n  //   // return this.postService.postClassName(this.post);\n  //   return '';\n  // }\n\n  partList: Array<{label: string, index: number, post: Post}>;\n\n  // get partList(): number[] {\n  //   if (!this.series) {\n  //     return [];\n  //   }\n  // if (window.innerWidth > MOBILE_WIDTH || this.extended ||\n  //     this.series.posts.length < 7) {\n  //   return this.series.posts.map((p, i) => i + 1);\n  // }\n  //   const currentIndex =\n  //       this.series.posts.findIndex(p => p.post.id === this.post.id);\n  //   const parts = [];\n  //   const maxIndex = this.series.posts.length - 1;\n  //   const spacePastCurrent = Math.min(maxIndex - currentIndex, 3);\n  //   const spaceBeforeCurrent = Math.min(currentIndex, 5 - spacePastCurrent);\n  //   let skipping = false;\n  //   this.series.posts.forEach((p, i) => {\n  //     if (i === 0 || i === currentIndex + 1 || i === currentIndex - 1 ||\n  //         i === currentIndex || i === maxIndex ||\n  //         (i > currentIndex - spaceBeforeCurrent &&\n  //          i < currentIndex + spacePastCurrent)) {\n  //       parts.push(i + 1);\n  //       skipping = false;\n  //     } else if (!skipping) {\n  //       parts.push(-1);\n  //       skipping = true;\n  //     }\n  //   });\n  //   return parts;\n  // }\n\n  currentPartNumber = 0;\n  // get thisPart(): number {\n  //   // return this.series.posts.findIndex(p => p.post.id === this.post.id) +\n  //   1; return 1;\n  // }\n\n  nextPostTitle = '';\n  // get nextPostTitle(): string {\n  //   // return this.series.posts[this.thisPart].post.title;\n  //   return 'Next';\n  // }\n\n  constructor(\n      private readonly postStateService: PostListStateService,\n      private readonly postService: PostService,\n      private readonly changeDetectorRef: ChangeDetectorRef,\n      private readonly location: Location,\n  ) {\n    this.post$ = this.postStateService.selection$.pipe(tap(post => {\n      if (post) {\n        this.postClassName = this.postService.postClassName(post);\n      }\n    }));\n    this.series$ = this.postStateService.series$.pipe(tap(series => {\n      if (series) {\n        if (window.innerWidth > MOBILE_WIDTH || this.extended ||\n            series.posts.length < 7) {\n          this.partList = series.posts.map((p, i) => {\n            const index = i + 1;\n            return {\n              label: p.label || 'Part ' + index,\n              index: i + 1,\n              post: p.post\n            };\n          });\n        }\n        this.currentPartNumber =\n            series.posts.findIndex(\n                p => p.post.id === this.postStateService.selectedPostId) +\n            1;\n        if (this.currentPartNumber < series.posts.length) {\n          this.nextPostTitle = series.posts[this.currentPartNumber].post.title;\n        } else {\n          this.nextPostTitle = '';\n        }\n      } else {\n        this.partList = [];\n      }\n    }));\n\n    // this.postStateService.selection$.subscribe(post => {\n    //   this.post = post;\n    //   console.log('post selected for series', post);\n    //   if (this.seriesSubscription) {\n    //     this.seriesSubscription.unsubscribe();\n    //   }\n    //   this.seriesSubscription =\n    //   this.postService.fetchSeries(post).subscribe(series => {\n    //     console.log('series?', series);\n    //     this.series = series;\n    //   });\n    // });\n\n    // this.postService.series$.pipe(skip(1)).subscribe(series => {\n    //   this.series = series;\n\n    // if (this.series) {\n    //   if (window.innerWidth > MOBILE_WIDTH || this.extended ||\n    //     this.series.posts.length < 7) {\n    //     this.partList = this.series.posts.map((p, i) => {\n    //       const index = i + 1;\n    //       return {\n    //         label: p.label || 'Part ' + index,\n    //         index: i + 1,\n    //         post: p.post\n    //       };\n    //     });\n    //   }\n    // } else {\n    //   this.partList = [];\n    // }\n\n    //   this.changeDetectorRef.detectChanges();\n    // }, error => {\n    //   // Do nothing on errors - chances are there just isn't a series for\n    //   this post.\n    // });\n  }\n\n  gotoPost(e: MouseEvent, series: Series, post: Post) {\n    e.stopPropagation();\n    this.location.go(`${SERIES_PREFIX}/${series.slug};post=${post.slug}`);\n    // this.location.go(`${SERIES_PREFIX}/${series.slug}`);\n    // setTimeout(() => {\n    //   this.location.replaceState(`${POST_PREFIX}/${post.slug}`);\n    // }, 1000);\n\n    // this.location.go(`${POST_PREFIX}/${post.slug}`);\n    // if (post.id !== this.post.id) {\n    //   const gotoPost = post;\n    //   // Show just the posts for this series.\n    //   this.postService.broadcastPosts(\n    //     series.posts.map(seriesPost => seriesPost.post));\n    //   // Deselect the post.\n    //   this.postService.selectPost();\n\n    //   setTimeout(() => {\n    //     // Open the selected post after the animation finishes.\n    //     this.location.go(POST_PREFIX + '/' + gotoPost.id);\n    //     this.postService.selectPost(gotoPost);\n    //   }, 1000);\n    // }\n  }\n\n  nextPost(e: MouseEvent, series: Series) {\n    this.gotoPost(e, series, series.posts[this.currentPartNumber].post);\n  }\n\n  goToSeries(e: MouseEvent, series: Series) {\n    e.stopPropagation();\n    this.location.go(`${SERIES_PREFIX}/${series.slug}`);\n  }\n}\n","<ng-container *ngIf=\"post$ | async as post\">\n  <div class=\"wrapper {{postClassName}}\"\n       *ngIf=\"series$ | async as series\"\n       [@series]>\n    <div class=\"series\"\n         *ngIf=\"series\">\n      <div class=\"series-intro\"\n           *ngIf=\"extended\">\n        <p><em>This is part {{currentPartNumber}} of a series.</em></p>\n        <p *ngIf=\"currentPartNumber < partList.length\"><em>Next: <a\n               (click)=\"nextPost($event, series)\">{{nextPostTitle}}</a></em></p>\n      </div>\n      <h2 (click)=\"goToSeries($event, series)\">{{series.name}}</h2>\n      <p *ngIf=\"extended && series.description\">{{series.description}}</p>\n      <div class=\"post-links corner-box\">\n        <ng-container *ngFor=\"let part of partList\">\n          <a *ngIf=\"part.index > 0\"\n             (click)=\"gotoPost($event, series, part.post)\"\n             [class.active]=\"part.post.id == post.id\">\n            {{part.label}}\n          </a>\n          <span *ngIf=\"part.index === -1\">. . .</span>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import {ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {UntypedFormControl, UntypedFormGroup, Validators} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {PostService} from '../services/post.service';\nimport {Post, SurveyOption} from '../services/types';\nimport {createToggle} from '../shared/anim';\n\nconst VOTE_LS_KEY = 'vote_for_post_';\n\n@Component({\n  selector: 'app-post-survey',\n  templateUrl: './post-survey.component.html',\n  styleUrls: ['./post-survey.component.scss'],\n  animations: [\n    createToggle({\n      name: 'results',\n      outStyle: {width: 0},\n      inStyle: {width: '{{width}}'},\n      params: {width: '100%'},\n      durationMs: 1000,\n      delayMs: 500\n    }),\n    createToggle({\n      name: 'option',\n      outStyle: {\n        'padding-top': 0,\n        'padding-bottom': 0,\n        height: 0,\n        overflow: 'hidden',\n      },\n    })\n  ]\n})\nexport class PostSurveyComponent implements OnInit {\n  CUSTOM_OPTION_ID = '-1';\n\n  @Input() post: Post;\n\n  options$?: Observable<SurveyOption[]>;\n\n  selectedOptionId = '';\n\n  showResults = false;\n  totalVotes = 0;\n\n  addOptionFormGroup = new UntypedFormGroup({\n    'text':\n        new UntypedFormControl('', [Validators.required, Validators.maxLength(280)]),\n    'name': new UntypedFormControl('', Validators.required),\n  });\n\n  constructor(\n      private readonly service: PostService,\n      private readonly changeDetectorRef: ChangeDetectorRef,\n  ) {\n    this.addOptionFormGroup.valueChanges.subscribe(value => {\n      if (value['text']) {\n        this.selectedOptionId = this.CUSTOM_OPTION_ID;\n      }\n    });\n  }\n\n  get isSurveyOpen(): boolean {\n    return !this.post.survey_expires ||\n        (new Date(this.post.survey_expires)) > new Date();\n  }\n\n  get prompt(): string {\n    if (this.isSurveyOpen) {\n      return this.post.survey_open_prompt ||\n          'Please pick which answer you like best.';\n    } else {\n      return this.post.survey_closed_prompt ||\n          'Voting on this post is closed. Here are the results.';\n    }\n  }\n\n  get isSubmitValid(): boolean {\n    return (this.selectedOptionId !== '' &&\n            this.selectedOptionId !== this.CUSTOM_OPTION_ID) ||\n        (this.selectedOptionId === this.CUSTOM_OPTION_ID &&\n         this.addOptionFormGroup.valid);\n  }\n\n  get voteLocalStorageKey(): string {\n    return `${VOTE_LS_KEY}${this.post.id}`;\n  }\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  init() {\n    if (!this.isSurveyOpen) {\n      this.showResults = true;\n    }\n    this.options$ =\n        this.service.fetchSurveyOptions(this.post).pipe(tap(options => {\n          console.log('options', options);\n          this.totalVotes = 0;\n          for (const option of options) {\n            if (option.custom) {\n              // Count custom options as votes.\n              this.totalVotes++;\n            }\n            this.totalVotes += option.votes.length;\n          }\n          console.log('total votes:', this.totalVotes);\n\n          const existingVote =\n              JSON.parse(localStorage.getItem(this.voteLocalStorageKey));\n          if (existingVote) {\n            this.showResults = true;\n            if (existingVote['survey_option']) {\n              // It's a standard vote for an option.\n              this.selectedOptionId = existingVote['survey_option'];\n            } else if (existingVote['post']) {\n              // It's a custom option.\n              this.selectedOptionId = existingVote['id'];\n            }\n          }\n        }));\n    this.changeDetectorRef.detectChanges();\n  }\n\n  optionVoteCount(option: SurveyOption): number {\n    return (option.custom ? 1 : 0) + option.votes.length;\n  }\n\n  select(option: SurveyOption) {\n    if (this.showResults) {\n      return;\n    }\n    this.addOptionFormGroup.reset();\n    this.selectedOptionId = option.id;\n  }\n\n  submit() {\n    if (!this.selectedOptionId) {\n      return;\n    }\n    this.options$ = null;\n    // If selectedOptionId is -1, we're creating a new option.\n    if (this.selectedOptionId === this.CUSTOM_OPTION_ID &&\n        this.addOptionFormGroup.valid) {\n      this.service.createSurveyOption(this.post, this.addOptionFormGroup.value)\n          .subscribe(newOption => {\n            localStorage.setItem(\n                this.voteLocalStorageKey, JSON.stringify(newOption));\n            this.showResults = true;\n            this.init();\n          });\n    } else if (this.selectedOptionId) {\n      this.options$ = null;\n      this.service\n          .createSurveyVote(\n              this.post, this.selectedOptionId, {text: '', name: ''})\n          .subscribe(newVote => {\n            localStorage.setItem(\n                this.voteLocalStorageKey, JSON.stringify(newVote));\n            this.showResults = true;\n            this.init();\n          });\n    }\n  }\n}\n","<h3 *ngIf=\"!showResults\">Answer this</h3>\n<h3 *ngIf=\"showResults\">The results are in</h3>\n\n<div class=\"survey_content left-border\"\n     [class.show-results]=\"showResults\">\n\n  <p *ngIf=\"!showResults\">{{post.survey_description}}</p>\n\n  <ng-container *ngIf=\"options$ | async as options; else loadingOptions\">\n    <label>{{prompt}}</label>\n\n    <ul>\n      <li *ngFor=\"let option of options\"\n          class=\"corner-box\"\n          [class.selected]=\"option.id === selectedOptionId\"\n          (click)=\"select(option)\">\n        {{option.text}}\n\n        <div class=\"submitted-by\"\n             *ngIf=\"option.custom\">submitted by {{option.name}}</div>\n\n        <div class=\"results\"\n             *ngIf=\"showResults\"\n             [@results]=\"{value: option.id, params: {width: ((optionVoteCount(option) / totalVotes * 100) + '%')}}\">\n          <span>{{optionVoteCount(option)}} / {{totalVotes}} votes</span>\n        </div>\n      </li>\n\n      <li *ngIf=\"post.survey_allows_custom_answers && !showResults\"\n          [@option]\n          class=\"corner-box\"\n          [class.selected]=\"selectedOptionId === CUSTOM_OPTION_ID\">\n        <label>Add your own idea (other folks will be able to vote for it):</label>\n        <form [formGroup]=\"addOptionFormGroup\">\n          <textarea formControlName=\"text\"\n                    placeholder=\"Your idea\"></textarea>\n          <span class=\"char-count\">{{(addOptionFormGroup.controls.text.value || '').length}} /\n            280</span>\n          <input formControlName=\"name\"\n                 placeholder=\"Your name\" />\n        </form>\n      </li>\n    </ul>\n\n    <button [disabled]=\"!isSubmitValid\"\n            *ngIf=\"!showResults\"\n            (click)=\"submit()\">submit</button>\n  </ng-container>\n</div>\n\n<ng-template #loadingOptions>\n  <p>Loading your options . . .</p>\n</ng-template>\n","import {Location} from '@angular/common';\nimport {Component, ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild} from '@angular/core';\nimport {UntypedFormControl, UntypedFormGroup, Validators} from '@angular/forms';\nimport {Observable, Subscription} from 'rxjs';\nimport {PostListStateService} from '../services/post-list-state.service';\nimport {PostService} from '../services/post.service';\nimport {Comment, CreateComment, Post} from '../services/types';\nimport {createToggle} from '../shared/anim';\nimport {POST_PREFIX} from '../shared/const';\nimport {MarkdownServiceService} from '../shared/markdown-service.service';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n  animations: [\n    createToggle({\n      name: 'summary',\n      outStyle: {'height': '0', 'opacity': '0'},\n      inStyle: {'height': '*', 'opacity': '1'},\n      durationMs: 300,\n    }),\n    createToggle({\n      name: 'wrapper',\n      outStyle: {'height': '0', 'margin': '0', 'opacity': '0'},\n      inStyle: {'height': '*', 'margin': '*', 'opacity': '1'},\n      durationMs: 500\n    }),\n  ]\n})\nexport class PostComponent {\n  @ViewChild('commentText') commentText: ElementRef<HTMLTextAreaElement>;\n\n  @Input() post: Post;\n  @Input() index: number;\n\n  @Output() read = new EventEmitter<Post>();\n\n  showComments = false;\n\n  comments$: Observable<Comment[]>;\n  similarPosts$: Observable<Post[]>;\n\n  createdComment?: Comment;\n\n  postSelectionSubscription: Subscription;\n\n  private goBack = false;\n\n  @HostBinding('className')\n  get className(): string {\n    return this.postService.postClassName(this.post);\n  }\n\n  get selected(): boolean {\n    return this.postListService.selectedPostId === this.post.id;\n  }\n\n  commentFormGroup = new UntypedFormGroup({\n    'name': new UntypedFormControl('', Validators.required),\n    'text': new UntypedFormControl('', Validators.required)\n  });\n\n  constructor(\n      private readonly postService: PostService,\n      private readonly postListService: PostListStateService,\n      private readonly location: Location,\n      private readonly markdownService: MarkdownServiceService,\n  ) {\n    this.commentFormGroup.controls.text.valueChanges.subscribe(text => {\n      this.commentText.nativeElement.style.height = 'auto';\n      this.commentText.nativeElement.style.height =\n          this.commentText.nativeElement.scrollHeight + 'px';\n    });\n  }\n\n  renderSummary(post?: Post): string {\n    return this.markdownService.renderPostText(post, 'summary');\n  }\n\n  renderText(post?: Post): string {\n    return this.markdownService.renderPostText(post);\n  }\n\n  renderMarkdown(text: string) {\n    return this.markdownService.convert(text);\n  }\n\n  goHome(e: MouseEvent) {\n    e.stopPropagation();\n    this.location.go(POST_PREFIX);\n  }\n\n  readPost(e: MouseEvent) {\n    e.stopPropagation();\n    this.read.next(this.post);\n  }\n\n  submitComment() {\n    const comment: CreateComment = {\n      name: this.commentFormGroup.controls.name.value,\n      text: this.commentFormGroup.controls.text.value,\n      post: this.post.id,\n    };\n    this.createdComment = {\n      ...comment,\n      time: (new Date()).toISOString(),\n      id: -1\n    };\n\n    this.commentFormGroup.reset();\n\n    this.postService.createComment(comment).subscribe(createdComment => {\n      this.createdComment = createdComment;\n    });\n  }\n\n  commentsAppear() {\n    // A wild comments appeared!\n    this.showComments = true;\n    this.comments$ = this.postService.fetchComments(this.post);\n    this.loadSimilarPosts();\n  }\n\n  loadSimilarPosts() {\n    this.postListService.loadSimilarPosts(this.post);\n  }\n\n  shouldShowDisclaimer() {\n    const time = this.post.time;\n    return (new Date(time).getTime()) < 1501545600000;\n  }\n}\n","<!-- <div class=\"similar-heading\" *ngIf=\"thisPostIsSimilar && index === 1\">\n  <h3>Some other content that may or may not be relevant:</h3>\n</div> -->\n\n<div class=\"wrapper\"\n     [class.selected]=\"selected\">\n  <div class=\"post-title\"\n       [class.has-image]=\"post?.image\">\n    <h2 class=\"corner-box\"\n        [innerHTML]=\"post?.title\"></h2>\n    <h3 class=\"date\">\n      <div class=\"hr\"></div>\n      {{post?.time | date}}\n    </h3>\n\n    <div class=\"image-wrapper\"\n         [@wrapper]\n         *ngIf=\"post?.image\">\n      <img [src]=\"post?.image\"\n           class=\"post-image\" />\n    </div>\n  </div>\n\n  <div class=\"tools\"\n       *ngIf=\"selected\"\n       [@wrapper]>\n    <span class=\"btn corner-box\"\n          (click)=\"goHome($event)\">Home</span>\n    <span class=\"btn corner-box\"\n          (click)=\"readPost($event)\">Read</span>\n  </div>\n\n  <div class=\"summary\"\n       [@summary]\n       [unsafeInnerHTML]=\"renderSummary(post)\"\n       *ngIf=\"!selected\">\n  </div>\n\n  <div class=\"post\"\n       *ngIf=\"selected\"\n       [@wrapper]>\n    <div class=\"transition-disclaimer\" *ngIf=\"shouldShowDisclaimer()\">\n      <p>Please note: this content was written before Siobhan began her gender transition.\n        Siobhan spent a long time trying to identify as Shauvon, a tall he/him dude.</p>\n      <p>She's still very tall, but she has corrected the other stuff. This old content has\n        not been corrected to match because pouring through eighteen years of\n        angsty content sounds really tedious.</p>\n    </div>\n\n    <div class=\"first-letter\"\n         [unsafeInnerHTML]=\"renderText(post)\">\n    </div>\n    <h3 class=\"end-of-line\"\n        [scrollTracker]\n        (appear)=\"commentsAppear()\">end of line.</h3>\n  </div>\n\n  <app-post-survey *ngIf=\"showComments && selected && post.survey_description\"\n                   [post]=\"post\"></app-post-survey>\n\n  <app-post-series *ngIf=\"selected\"\n                   extended=\"true\"></app-post-series>\n\n  <ng-container *ngIf=\"showComments\">\n    <div class=\"comments\"\n         *ngIf=\"comments$ | async as comments; else loadingComments\"\n         [@wrapper]>\n\n      <div class=\"list\"\n           *ngIf=\"selected\"\n           [@wrapper]>\n        <h3>Comments</h3>\n\n        <div class=\"left-border\">\n\n          <div class=\"comment\"\n               *ngIf=\"!comments.length\">\n            <div class=\"text\">\n              <p><em>Nothing yet. Add your thoughts below.</em></p>\n            </div>\n          </div>\n\n          <ng-container *ngFor=\"let comment of comments\">\n            <ng-container *ngTemplateOutlet=\"commentTemplate; context: {comment: comment}\">\n            </ng-container>\n          </ng-container>\n\n          <ng-container *ngIf=\"createdComment\">\n            <ng-container *ngTemplateOutlet=\"commentTemplate; context: {comment: createdComment}\">\n            </ng-container>\n          </ng-container>\n\n          <div class=\"comment\">\n            <form [formGroup]=\"commentFormGroup\">\n              <div class=\"post-title\">\n                <h2>\n                  <input formControlName=\"name\"\n                         placeholder=\"Your name\" />\n                </h2>\n                <h3>\n                  <div class=\"hr\"></div>\n                  &nbsp;\n                </h3>\n              </div>\n              <div class=\"text\">\n                <textarea formControlName=\"text\"\n                          #commentText\n                          placeholder=\"Your thoughts\"></textarea>\n                <div class=\"disclaimer\">\n                  No HTML is allowed, but you can use <a\n                     href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\"\n                     target=\"_blank\">Markdown</a>!\n                </div>\n                <button [disabled]=\"!commentFormGroup.valid\"\n                        (click)=\"submitComment()\">save</button>\n              </div>\n            </form>\n          </div>\n        </div> <!-- /.left-border -->\n      </div>\n    </div>\n  </ng-container>\n\n</div>\n\n<ng-template #loadingComments>\n  <span class=\"loading-comments\">Loading comments . . .</span>\n</ng-template>\n\n<!-- <ng-template #loadingSimilars>\n  <span>Finding similar posts . . .</span>\n</ng-template> -->\n\n<ng-template #commentTemplate\n             let-comment=\"comment\">\n  <div class=\"comment\"\n       [@wrapper]>\n    <div class=\"post-title\">\n      <h2>{{comment.name}}</h2>\n      <h3>\n        <div class=\"hr\"></div>\n        {{comment.time | date}}\n      </h3>\n    </div>\n    <div class=\"text\"\n         [innerHTML]=\"renderMarkdown(comment.text)\"></div>\n  </div>\n</ng-template>\n","import {ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {PostService} from '../services/post.service';\nimport {Post} from '../services/types';\nimport {MarkdownServiceService} from '../shared/markdown-service.service';\n\n\n@Component({\n  selector: 'app-read-post',\n  templateUrl: './read-post.component.html',\n  styleUrls: ['./read-post.component.scss']\n})\nexport class ReadPostComponent {\n  @Input() post?: Post;\n\n  @ViewChild('layoutPage', {static: false})\n  layoutPage: ElementRef<HTMLDivElement>;\n  @ViewChild('content', {static: false}) content: ElementRef<HTMLDivElement>;\n\n  pageContent: HTMLElement[] = [];\n  selectedPageIndex = -1;\n\n  currentIterationTarget: HTMLElement;\n\n  @Output('close') closeEvent = new EventEmitter();\n\n  constructor(\n    private readonly postService: PostService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly markdownService: MarkdownServiceService,\n  ) {}\n\n  get viewableArea(): HTMLDivElement {\n    return this.layoutPage.nativeElement.querySelector('.viewable-area') || document.createElement('div');\n  }\n\n  get viewableHeight(): number {\n    return this.viewableArea.clientHeight;\n  }\n\n  ngAfterViewInit() {\n    document.body.classList.add('disable-scroll');\n\n    const postContent = document.createElement('div');\n    postContent.innerHTML = `\n    <h2>${this.post.title}</h2>\n    <div class=\"content book-layout-top\">\n    ${this.renderText(this.post)}\n    </div>`;\n\n    this.currentIterationTarget = this.viewableArea;\n    this.loopThroughChildNodes(postContent);\n\n    this.pageContent.push(this.viewableArea.cloneNode(true) as HTMLElement);\n\n    console.log('pages', this.pageContent, this.viewableArea);\n\n    this.selectedPageIndex = 0;\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  renderText(post: Post): string {\n    if (post.markdown) {\n      return this.markdownService.convert(post.text);\n    } else {\n      return this.postService.decodeString(post.text);\n    }\n  }\n\n  close() {\n    document.body.classList.remove('disable-scroll');\n    this.closeEvent.next();\n  }\n\n  prevPage() {\n    if (this.selectedPageIndex > 0) {\n      this.selectedPageIndex--;\n    }\n  }\n\n  nextPage() {\n    if (this.selectedPageIndex < this.pageContent.length - 1) {\n      this.selectedPageIndex++;\n    }\n  }\n\n  isCurrentTargetOut(): boolean {\n    return this.viewableArea.scrollHeight > this.viewableHeight + 10;\n  }\n\n  loopThroughChildNodes(source: HTMLElement) {\n    console.log('source', source);\n    source.childNodes.forEach(child => {\n      if (child.nodeValue && !child.nodeValue.trim()) {\n        return;\n      }\n      console.log(\n        'child', child.nodeType, 'target',\n        this.currentIterationTarget.tagName,\n        this.currentIterationTarget.className);\n      if (child.nodeType === Node.TEXT_NODE) {\n        const words = child.textContent.split(' ');\n        const wordsToUse = [];\n        console.log(\n          'injecting', words.length, 'words to',\n          this.currentIterationTarget.tagName,\n          this.currentIterationTarget.className);\n        while (!this.isCurrentTargetOut() && words.length) {\n          wordsToUse.push(words.shift());\n          this.currentIterationTarget.innerHTML = wordsToUse.join(' ');\n        }\n        if (this.isCurrentTargetOut() && wordsToUse.length) {\n          words.unshift(wordsToUse.pop());\n          this.currentIterationTarget.innerHTML = wordsToUse.join(' ');\n        }\n\n        if (words.length) {\n          // The text overflows the page.\n          let nextParent =\n            this.currentIterationTarget.cloneNode(false) as HTMLElement;\n          nextParent.innerHTML = words.join(' ');\n\n          console.log(\n            'did not fit to', this.currentIterationTarget.outerHTML,\n            'clone:', nextParent,\n            'parent:', this.currentIterationTarget.parentElement.className);\n\n          if (!wordsToUse.length) {\n            console.log('at all');\n            // const toRemove = this.currentIterationTarget;\n            this.currentIterationTarget =\n              this.currentIterationTarget.parentElement;\n            // toRemove.remove();\n          } else {\n            console.log('words:', wordsToUse.length, words.length);\n            this.currentIterationTarget =\n              this.currentIterationTarget.parentElement;\n          }\n\n          let count = 0;\n\n          console.log(\n            'new target', this.currentIterationTarget.tagName,\n            this.currentIterationTarget.className);\n\n          while (!nextParent.classList.contains('book-layout-top') &&\n            !nextParent.classList.contains('viewable-area') &&\n            count < 20) {\n            const newNextParent =\n              this.currentIterationTarget.cloneNode(false) as HTMLElement;\n            newNextParent.appendChild(nextParent);\n            nextParent = newNextParent;\n            count++;\n            this.currentIterationTarget =\n              this.currentIterationTarget.parentElement;\n          }\n\n          this.pageContent.push(\n            this.viewableArea.cloneNode(true) as HTMLElement);\n\n          this.viewableArea.innerHTML = '';\n          this.currentIterationTarget = document.createElement('div');\n          this.currentIterationTarget.className = 'content book-layout-top';\n          this.viewableArea.appendChild(this.currentIterationTarget);\n\n          console.log(\n            'looping through', nextParent,\n            'target:', this.currentIterationTarget.tagName,\n            this.currentIterationTarget.className);\n          if (nextParent) {\n            this.loopThroughChildNodes(nextParent);\n          }\n        } else {\n          console.log('did fit!', this.currentIterationTarget.tagName);\n          this.currentIterationTarget =\n            this.currentIterationTarget.parentElement;\n        }\n      } else {\n        const newChild = child.cloneNode(true) as HTMLElement;\n        this.currentIterationTarget.append(newChild);\n\n        console.log(\n          'child is tag', newChild.tagName, newChild.className, 'is out?',\n          this.isCurrentTargetOut(), 'target',\n          this.currentIterationTarget.tagName,\n          this.currentIterationTarget.className);\n\n        if (this.isCurrentTargetOut()) {\n          if (newChild.hasChildNodes) {\n            const clone = newChild.cloneNode(true);\n            newChild.innerHTML = '';\n            this.currentIterationTarget = newChild;\n            this.loopThroughChildNodes(clone as HTMLElement);\n            // this.currentIterationTarget =\n            // this.currentIterationTarget.parentElement;\n          } else {\n            newChild.remove();\n            this.pageContent.push(\n              this.viewableArea.cloneNode(true) as HTMLElement);\n            this.viewableArea.innerHTML = '';\n            this.currentIterationTarget = this.viewableArea;\n            this.viewableArea.appendChild(newChild);\n          }\n        }\n      }\n    });\n  }\n\n  decodeString(string: string): string {\n    return this.postService.decodeString(string);\n  }\n}\n","<div class=\"page layout-page\"\n     *ngIf=\"post && selectedPageIndex === -1\"\n     #layoutPage>\n  <div class=\"viewable-area\">\n  </div>\n</div>\n\n<ng-container *ngFor=\"let page of pageContent; index as i\">\n  <div class=\"page\"\n       *ngIf=\"i === selectedPageIndex\"\n       [unsafeInnerHTML]=\"page.outerHTML\">\n  </div>\n</ng-container>\n\n<div class=\"controls left\">\n  <div class=\"close\">\n    <button (click)=\"close()\">x</button>\n  </div>\n  <button class=\"prev\"\n          (click)=\"prevPage()\">\n          &lt;\n  </button>\n  <button class=\"next\"\n          (click)=\"nextPage()\">\n          &gt;\n  </button>\n</div>\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class CsrfInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler):\n      Observable<HttpEvent<any>> {\n    let csrfCookie = '';\n    if (document.cookie) {\n      const cookies = document.cookie.split(';');\n      csrfCookie = cookies.find(cookie => {\n        return cookie.indexOf('csrftoken=') === 0;\n      }) ||\n          '';\n      csrfCookie = csrfCookie.replace('csrftoken=', '');\n    }\n    const newReq = req.clone({setHeaders: {'X-CSRFToken': csrfCookie}});\n    return next.handle(newReq);\n  }\n}\n","import {Location} from '@angular/common';\nimport {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subscription, timer} from 'rxjs';\nimport {scrollToTop} from '../shared/ui.util';\nimport {PostService} from './post.service';\nimport {Post, Series} from './types';\n\nexport interface PostListItem {\n  type: 'post'|'loadmore'|'series'|'similar_heading'|'no_results'|\n      'similars_loading';\n  series?: Series;\n  post?: Post;\n  page?: number;\n}\n\n@Injectable({providedIn: 'root'})\nexport class PostListStateService {\n  private pageIndex = 1;\n\n  private selectedPostId_?: number;\n  private postListSubject = new BehaviorSubject<PostListItem[]>(null);\n  private postSelectionSubject = new BehaviorSubject<Post|null>(null);\n  private seriesSubject = new BehaviorSubject<Series|null>(null);\n\n  private pageSubscription: Subscription;\n  private seriesSubscription: Subscription;\n\n  get page() {\n    return this.pageIndex;\n  }\n\n  get selectedPostId() {\n    return this.selectedPostId_;\n  }\n\n  get selection$() {\n    return this.postSelectionSubject.asObservable();\n  }\n\n  get series$() {\n    return this.seriesSubject.asObservable();\n  }\n\n  constructor(\n      private readonly postService: PostService,\n      private readonly location: Location,\n  ) {\n    this.location.onUrlChange((url, state) => {\n      const postsRegex = /\\/posts\\/([a-z0-9\\-]+)$/gi;\n      const seriesRegex = /\\/series\\/([a-z0-9\\-]+)(;post=([a-z0-9\\-]+))?$/gi;\n\n      if (url.match(postsRegex)) {\n        // If pushing a new post to the stack, select it and scroll to top.\n        const slug = url.replace(postsRegex, '$1');\n        if (state && this.selectedPostId) {\n          // State is set if this was caused by the back button.\n          // If a post is selected and we are going back to a different one,\n          // we want a slightly different animation.\n          combineLatest(\n              this.postService.fetchPostById(this.selectedPostId),\n              this.postService.fetchPost(slug))\n              .subscribe(posts => {\n                this.selectedPostId_ = null;\n                this.broadcast({posts});\n                setTimeout(() => {\n                  this.selectPost(slug);\n                }, 650);\n              });\n        } else {\n          this.selectPost(slug);\n          // State is null when this is a new navigation - the user clicked on a\n          // link.\n          scrollToTop();\n        }\n      } else if (url.match(seriesRegex)) {\n        const slug = url.replace(seriesRegex, '$1');\n        this.showSeries(slug);\n\n        // If the url includes a series matrix param, load the series first.\n        const postSlug = url.replace(seriesRegex, '$3');\n        if (postSlug) {\n          setTimeout(() => {\n            this.selectPost(postSlug);\n          }, 500);\n        }\n\n      } else {\n        // Go \"home\"\n        this.showList();\n      }\n\n      // If going back, scroll to the position in the scrollPositionHistory.\n    });\n  }\n\n  broadcast({posts, more, series, loadingSimilar, similars}: {\n    posts?: Post[];\n    more?: boolean;\n    loadingSimilar?: boolean;\n    series?: Series;\n    similars?: Post[];\n  }) {\n    let items: PostListItem[];\n    if (posts) {\n      items = posts.map(post => {\n        return {\n          post,\n          type: 'post',\n        };\n      });\n    } else if (series) {\n      items = series.posts.map(post => {\n        return {type: 'post', post: post.post};\n      });\n      items.unshift({type: 'series', series});\n    } else {\n      items = [{type: 'no_results'}];\n    }\n    if (more) {\n      items.push({type: 'loadmore', page: this.pageIndex});\n    }\n    if (loadingSimilar) {\n      items.push({type: 'similars_loading'})\n    }\n    if (similars) {\n      items = items.concat(\n          [{type: 'similar_heading'}],\n          similars.map(post => {\n            return {post, type: 'post'};\n          }),\n      );\n    }\n    this.postListSubject.next(items);\n  }\n\n  init(selectedPostSlug?: string, selectedSeriesSlug?: string):\n      Observable<PostListItem[]> {\n    if (selectedPostSlug) {\n      this.selectPost(selectedPostSlug, 2000);\n    } else if (selectedSeriesSlug) {\n      this.showSeries(selectedSeriesSlug);\n    } else {\n      this.showList();\n    }\n    return this.postListSubject.asObservable();\n  }\n\n  nextPage() {\n    if (this.postService.nextPageIndex >= this.pageIndex) {\n      const pages = [];\n      // Load all pages, including the next one.\n      for (let cnt = 1; cnt <= this.pageIndex + 1; cnt++) {\n        pages.push(this.postService.fetchPage(cnt));\n      }\n      this.pageSubscription = combineLatest(...pages).subscribe(pageData => {\n        this.pageIndex++;\n        const posts: Post[] =\n            pageData.reduce((last, current) => last.concat(current));\n        this.broadcast({posts, more: true});\n      });\n    }\n  }\n\n  loadSimilarPosts(post: Post) {\n    this.broadcast({posts: [post], loadingSimilar: true});\n    this.pageSubscription =\n        this.postService.fetchSimilarPosts(post).subscribe(posts => {\n          this.broadcast({posts: [post], similars: posts});\n        });\n  }\n\n  resetSubscriptions() {\n    if (this.pageSubscription) {\n      this.pageSubscription.unsubscribe();\n    }\n    if (this.seriesSubscription) {\n      this.seriesSubscription.unsubscribe();\n    }\n  }\n\n  showSeries(seriesSlug: string) {\n    this.resetSubscriptions();\n    this.postService.fetchSeries(seriesSlug).subscribe(series => {\n      // Hide any series summary objects.\n      this.seriesSubject.next(null);\n      // Deselect the post.\n      this.selectedPostId_ = null;\n      this.postSelectionSubject.next(null);\n      // Show all the posts for this series.\n      this.broadcast({series});\n    });\n  }\n\n  showList() {\n    this.resetSubscriptions();\n    // Hide any series summary objects.\n    this.seriesSubject.next(null);\n    // Deselect the post.\n    this.selectedPostId_ = null;\n    this.postSelectionSubject.next(null);\n    // Show all loaded posts.\n    if (this.pageIndex > 0) {\n      this.pageIndex--;\n    }\n    this.nextPage();\n  }\n\n  selectPost(postSlug: string, delay = 0) {\n    this.resetSubscriptions();\n    combineLatest(timer(delay), this.postService.fetchPost(postSlug))\n        .subscribe(([, post]) => {\n          // Only this post should show in the list.\n          this.broadcast({posts: [post]});\n          // This timeout makes sure the post animates in properly.\n          setTimeout(() => {\n            this.selectedPostId_ = post.id;\n            this.postSelectionSubject.next(post);\n          }, 10);\n          // Load the series data for this post.\n          this.seriesSubscription =\n              this.postService.fetchSeriesForPost(post).subscribe(series => {\n                this.seriesSubject.next(series);\n              });\n        });\n  }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {environment} from 'src/environments/environment';\nimport {Comment, CreateComment, Post, PostResponse, Series, SurveyOption, SurveyVote} from './types';\n\n\n\n@Injectable({providedIn: 'root'})\nexport class PostService {\n  POST_URL = `${environment.server}/api/posts`;\n  SERIES_URL = `${environment.server}/api/series`;\n  TAGS_URL = `${environment.server}/api/tags`;\n\n  totalPosts = 0;\n  nextPageIndex = 1;\n\n  // A map of Post IDs > page number\n  private pageToPosts = new Map<number, number[]>();\n  // A map of Post > post ID\n  private loadedPosts = new Map<number, Post>();\n  // A map of slug > post ID\n  private postSlugs = new Map<string, number>();\n\n  private selectedPostId?: number;\n\n  // A map of series > series ID.\n  private seriesCache = new Map<number, Series>();\n  // A map of slug > series ID.\n  private seriesSlugs = new Map<string, number>();\n  // A map of series ID > post ID.\n  private seriesToPost = new Map<number, number>();\n\n  constructor(private readonly http: HttpClient) {\n    this.seriesCache.set(-1, null);\n  }\n\n  private rememberPost(post: Post) {\n    this.loadedPosts.set(post.id, post);\n    this.postSlugs.set(post.slug, post.id);\n  }\n\n  fetchPage(page = this.nextPageIndex): Observable<Post[]> {\n    if (this.pageToPosts.has(page)) {\n      const posts = [];\n      for (const postId of this.pageToPosts.get(page)) {\n        posts.push(this.loadedPosts.get(postId));\n      }\n      return of(posts);\n    } else if (page) {\n      return this.http.get<PostResponse>(`${this.POST_URL}?page=${page}`)\n          .pipe(map(response => {\n            const postsOnThisPage: number[] = [];\n            response.results.forEach(post => {\n              postsOnThisPage.push(post.id);\n              this.rememberPost(post);\n            });\n            this.pageToPosts.set(page, postsOnThisPage);\n            if (response.next && page === this.nextPageIndex) {\n              this.nextPageIndex++;\n            } else {\n              this.nextPageIndex = 0;\n            }\n            this.totalPosts = response.count;\n            return response.results;\n          }));\n    } else {\n      return of([]);\n    }\n  }\n\n  fetchPost(slug: string): Observable<Post> {\n    if (this.postSlugs.has(slug)) {\n      return of(this.loadedPosts.get(this.postSlugs.get(slug)));\n    } else {\n      return this.http.get<Post>(`${this.POST_URL}/${slug}`).pipe(tap(post => {\n        this.rememberPost(post);\n      }));\n    }\n  }\n\n  fetchPostById(id: number): Observable<Post> {\n    return of(this.loadedPosts.get(id));\n  }\n\n  getTripleMoon() {\n    return this.fetchSeries('triple-moon');\n  }\n\n  getRandomPostByTag(tag: string) {\n    return this.http.get<Post>(`${this.TAGS_URL}/${tag}/randompost`)\n        .pipe(tap(post => {\n          console.log({post});\n          this.rememberPost(post);\n        }));\n  }\n\n  postClassName(post: Post): string {\n    if (!post) {\n      return '';\n    }\n    let className = 'post ';\n    if (post && post.tags) {\n      if (post.tags.includes('fiction')) {\n        className += 'fiction';\n      } else if (post.tags.includes('technology')) {\n        className += 'technology';\n      } else if (post.tags.includes('idea')) {\n        className += 'idea';\n      } else if (post.tags.includes('comedy')) {\n        className += 'comedy';\n      } else {\n        className += post.tags[0];\n      }\n    }\n    return className;\n  }\n\n  decodeString(string: string): string {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = string;\n    let clean = textArea.value;\n    if (clean.trim().indexOf('<p>') !== 0) {\n      clean = `<p>${clean}</p>`;\n    }\n    clean = clean.replace(\n        /<img src=\"([^\"]*)\" height=\"[0-9]+\" width=\"[0-9]+\"/gi, '<img src=\"$1\"');\n    return clean;\n  }\n\n  private rememberSeries(series: Series) {\n    const id = series ? series.id : -1;\n    this.seriesCache.set(id, series);\n    if (series && series.posts) {\n      this.seriesSlugs.set(series.slug, series.id);\n      series.posts.forEach(p => {\n        // So we can look up the series again for the other posts.\n        this.seriesToPost.set(p.post.id, series.id);\n      });\n    }\n  }\n\n  fetchSeries(seriesSlug: string): Observable<Series> {\n    if (this.seriesSlugs.get(seriesSlug)) {\n      return of(this.seriesCache.get(this.seriesSlugs.get(seriesSlug)));\n    } else {\n      return this.http.get<Series>(`${this.SERIES_URL}/${seriesSlug}`)\n          .pipe(tap(series => {\n            this.rememberSeries(series);\n          }));\n    }\n  }\n\n  fetchSeriesForPost(post: Post): Observable<Series|null> {\n    if (post) {\n      if (this.seriesToPost.has(post.id)) {\n        return of(this.seriesCache.get(this.seriesToPost.get(post.id)));\n      } else {\n        return this.http.get<Series|null>(`${this.POST_URL}/${post.id}/series/`)\n            .pipe(tap(series => {\n              this.seriesToPost.set(post.id, series ? series.id : -1);\n              this.rememberSeries(series);\n            }));\n      }\n    } else {\n      return of(null);\n    }\n  }\n\n  fetchComments(post: Post): Observable<Comment[]> {\n    return this.http.get<Comment[]>(`${this.POST_URL}/${post.id}/comments/`);\n  }\n\n  createComment(comment: CreateComment): Observable<Comment> {\n    return this.http.post<Comment>(\n        `${this.POST_URL}/${comment.post}/comment/`, comment);\n  }\n\n  fetchSimilarPosts(post: Post): Observable<Post[]> {\n    return this.http.get<Post[]>(`${this.POST_URL}/${post.slug}/similar/`);\n  }\n\n  fetchSurveyOptions(post: Post): Observable<SurveyOption[]> {\n    return this.http.get<SurveyOption[]>(\n        `${this.POST_URL}/${post.slug}/surveyoptions/`);\n  }\n\n  createSurveyOption(post: Post, newOptionDeets: {text: string; name: string}):\n      Observable<SurveyOption> {\n    return this.http.post<SurveyOption>(\n        `${this.POST_URL}/${post.slug}/surveyoption/`, {\n          name: newOptionDeets.name,\n          text: newOptionDeets.text,\n        });\n  }\n\n  createSurveyVote(post: Post, optionId: string, meta: {\n    text: string; name: string\n  }): Observable<SurveyVote> {\n    return this.http.post<SurveyVote>(\n        `${this.POST_URL}/${post.slug}/surveyvote/`, {\n          name: meta.name,\n          text: meta.text,\n          survey_option: optionId,\n        });\n  }\n}\n","import {animate, AnimationTriggerMetadata, AUTO_STYLE, state, style, transition, trigger} from '@angular/animations';\n\n\nexport interface StyleType {\n  [key: string]: string|number;\n}\n\n/**\n * Toggles between two styles.\n * @param name\n * @param outStyle\n * @param inStyle\n * @param duration\n * @param delay\n */\nexport function createToggle(options: {\n  name: string,\n  outStyle: StyleType,\n  inStyle?: StyleType,\n  durationMs?: number,\n  delayMs?: number,\n  inString?: string,\n  outString?: string,\n  params?: {[name: string]: string}\n}): AnimationTriggerMetadata {\n  const duration = options.durationMs || 250;\n  const delay = options.delayMs || 0;\n  const inString = options.inString || `${duration}ms ${delay}ms ease-in-out`;\n  const outString = options.outString || inString;\n  const inStyle = options.inStyle || AUTO_STYLE\n\n  return trigger(options.name, [\n    state('*', style(inStyle), {params: options.params}),\n    state('void', style(options.outStyle)),\n    transition('void => *', animate(inString)),\n    transition('* => void', animate(outString)),\n  ]);\n}\n","/** The official URL prefix for posts. */\nexport const POST_PREFIX = '/posts';\nexport const SERIES_PREFIX = '/series';\n","import {Injectable} from '@angular/core';\nimport {Converter} from 'showdown';\n\nimport {PostService} from '../services/post.service';\nimport {Post} from '../services/types';\n\n@Injectable({providedIn: 'root'})\nexport class MarkdownServiceService {\n  private mdConverter: Converter;\n\n  constructor(private readonly postService: PostService) {\n    this.mdConverter = new Converter();\n\n    this.mdConverter.setOption('openLinksInNewWindow', 'true');\n    this.mdConverter.setOption('simplifiedAutoLink', 'true');\n    this.mdConverter.setOption('excludeTrailingPunctuationFromURLs', 'true');\n  }\n\n  convert(text: string): string {\n    return this.mdConverter.makeHtml(text);\n  }\n\n  renderPostText(post?: Post, field: 'text'|'summary' = 'text'): string {\n    if (!post) {\n      return '';\n    }\n    const text = field === 'text' ? post.text : post.summary;\n    if (post.markdown) {\n      return this.convert(text);\n    } else {\n      return this.postService.decodeString(text);\n    }\n  }\n}\n","import {Directive, ElementRef, EventEmitter, Inject, InjectionToken, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {fromEvent, Subscription} from 'rxjs';\nimport {filter, map, throttleTime} from 'rxjs/operators';\n\nexport const SCROLL_CONTAINER_SELECTOR =\n    new InjectionToken<string>('ScrollContainerSelector');\n\n@Directive({selector: '[scrollTracker]'})\nexport class ScrollTrackerDirective implements OnDestroy, OnInit {\n  /** This is necessary for the [scrollTracker] syntax to work. */\n  @Input() scrollTracker = '';\n\n  scrollSubscription: Subscription;\n\n  @Output() appear = new EventEmitter<boolean>();\n  private appeared = false;\n\n  get container() {\n    return this.scrollSelector ? document.querySelector(this.scrollSelector) :\n                                 window;\n  }\n\n  constructor(\n      private readonly elementRef: ElementRef,\n      @Inject(SCROLL_CONTAINER_SELECTOR) private readonly scrollSelector:\n          string,\n  ) {\n    const element: HTMLElement = this.elementRef.nativeElement;\n\n    this.scrollSubscription =\n        fromEvent(this.container, 'scroll')\n            .pipe(filter(() => !this.appeared), throttleTime(100), map(e => {\n                    if (this.scrollSelector) {\n                      return (this.container as Element).scrollTop;\n                    } else {\n                      return (this.container as Window).scrollY;\n                    }\n                  }))\n            .subscribe(pos => {\n              if (pos + window.innerHeight > element.offsetTop) {\n                this.appear.next(true);\n                this.appeared = true;\n              }\n            });\n  }\n\n  ngOnInit() {\n    this.container.dispatchEvent(new Event('scroll'));\n  }\n\n  ngOnDestroy() {\n    this.scrollSubscription.unsubscribe();\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {SCROLL_CONTAINER_SELECTOR, ScrollTrackerDirective} from './scroll-tracker.directive';\nimport {UnsafeInnerHTMLDirective} from './unsafe-inner-html.directive';\n\n\n@NgModule({\n  declarations: [\n    ScrollTrackerDirective,\n    UnsafeInnerHTMLDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    ScrollTrackerDirective,\n    UnsafeInnerHTMLDirective,\n  ],\n  providers: [\n    {provide: SCROLL_CONTAINER_SELECTOR, useValue: ''},\n  ]\n})\nexport class SharedModule {\n}\n","\n\nexport function scrollToTop() {\n  scrollTo(0);\n}\n\nexport function scrollTo(to: number, duration?: number) {\n  const maxScroll = document.body.scrollHeight - window.innerHeight;\n  if (maxScroll < to) {\n    duration = duration * (maxScroll / to);\n    to = maxScroll;\n  }\n\n  const from = window.scrollY, difference = to - from;\n\n  duration = duration || Math.min(Math.abs(difference), 1000);\n\n  const easeInOutQuad = (t: number, b: number, c: number, d: number) => {\n    let reverse = c < 0, s, e;\n\n    t /= d / 2;\n    if (t < 1) return c / 2 * t * t + b;\n    t--;\n    const val = -c / 2 * (t * (t - 2) - 1) + b;\n\n    if (reverse) {\n      return -val;\n    } else {\n      return val;\n    }\n  };\n\n  let startTime = 0;\n\n  const scrollFunc = (time: number) => {\n    if (startTime === 0) {\n      startTime = time;\n    }\n    if (window.scrollY === to || (time - startTime) >= duration) {\n      window.scroll(0, to);\n      return;\n    }\n\n    window.scroll(\n        0, easeInOutQuad((time - startTime), from, difference, duration));\n    requestAnimationFrame(scrollFunc);\n  };\n\n  requestAnimationFrame(scrollFunc);\n}\n","import {Directive, ElementRef, Input} from '@angular/core';\n\n/**\n * Injects the input to an element's HTML content without sanitizing it in any\n * way. This should only be used if you ABSOLUTELY TRUST the HTML being\n * injected.\n */\n@Directive({selector: '[unsafeInnerHTML]'})\nexport class UnsafeInnerHTMLDirective {\n  @Input()\n  set unsafeInnerHTML(html: string) {\n    if (this.elementRef) {\n      this.elementRef.nativeElement.innerHTML = html;\n    }\n  }\n\n  constructor(private readonly elementRef: ElementRef) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  server: 'http://localhost:8000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`,\n * `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a\n * negative impact on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","PostListComponent","POST_PREFIX","routes","path","component","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","fromEvent","map","throttleTime","SCROLL_POS_WHEN_BG_GONE","BG_PARALLAX_POS","BG_STARTING_OPACITY","AppComponent","constructor","postService","location","year","Date","getFullYear","window","pipe","e","scrollY","subscribe","pos","setTimeout","ratio","bgPos","opacity","bgImage","nativeElement","style","top","String","logoImage","i0","ɵɵdirectiveInject","PostService","i2","Location","selectors","viewQuery","AppComponent_Query","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","HTTP_INTERCEPTORS","HttpClientModule","HttpClientXsrfModule","ReactiveFormsModule","BrowserModule","BrowserAnimationsModule","PostSeriesComponent","PostComponent","CsrfInterceptor","SharedModule","ReadPostComponent","PostSurveyComponent","AppModule","bootstrap","provide","useClass","multi","withOptions","cookieName","headerName","declarations","BehaviorSubject","combineLatest","shareReplay","switchMap","tap","createToggle","SERIES_PREFIX","ɵɵlistener","PostListComponent_div_0_Template_h1_click_1_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","home","ɵɵproperty","undefined","ɵɵtextInterpolate","listItem_r11","series","name","description","posts","length","PostListComponent_div_5_ng_container_1_app_post_2_Template_app_post_click_0_listener","$event","_r18","ngIf","ctx_r16","selectPost","post","PostListComponent_div_5_ng_container_1_app_post_2_Template_app_post_mousedown_0_listener","ctx_r19","postMouseDown","PostListComponent_div_5_ng_container_1_app_post_2_Template_app_post_mouseup_0_listener","ctx_r21","postMouseUp","PostListComponent_div_5_ng_container_1_app_post_2_Template_app_post_read_0_listener","ctx_r23","openPostToRead","link_r30","ctx_r33","renderLinkSummary","PostListComponent_div_5_ng_container_1_div_3_div_1_div_1_Template_div_click_0_listener","restoredCtx","_r37","$implicit","ctx_r36","PostListComponent_div_5_ng_container_1_div_3_div_1_div_1_Template_div_mousedown_0_listener","ctx_r38","PostListComponent_div_5_ng_container_1_div_3_div_1_div_1_Template_div_mouseup_0_listener","ctx_r39","ɵɵtemplate","PostListComponent_div_5_ng_container_1_div_3_div_1_div_1_div_4_Template","PostListComponent_div_5_ng_container_1_div_3_div_1_div_1_div_5_Template","ctx_r29","linkyTitles","i_r31","tmp_1_0","title","ɵɵsanitizeHtml","summary","ɵɵtextInterpolate2","ɵɵpipeBind1","time","PostListComponent_div_5_ng_container_1_div_3_div_1_div_1_Template","links_r28","ctx_r25","linkiesTrackBy","PostListComponent_div_5_ng_container_1_div_3_div_1_Template","PostListComponent_div_5_ng_container_1_div_3_ng_template_3_Template","ɵɵtemplateRefExtractor","ctx_r14","linkies$","_r26","ɵɵelementContainerStart","PostListComponent_div_5_ng_container_1_div_1_Template","PostListComponent_div_5_ng_container_1_app_post_2_Template","PostListComponent_div_5_ng_container_1_div_3_Template","ɵɵelementContainerEnd","ctx_r9","isPostSelected","listItem_r40","PostListComponent_div_5_ng_container_2_app_post_2_Template_app_post_click_0_listener","_r50","ctx_r48","PostListComponent_div_5_ng_container_2_app_post_2_Template_app_post_mousedown_0_listener","ctx_r51","PostListComponent_div_5_ng_container_2_app_post_2_Template_app_post_mouseup_0_listener","ctx_r53","PostListComponent_div_5_ng_container_2_app_post_2_Template_app_post_read_0_listener","ctx_r55","PostListComponent_div_5_ng_container_2_span_3_Template_span_appear_0_listener","_r58","ctx_r57","fetchNextPage","PostListComponent_div_5_ng_container_2_div_1_Template","PostListComponent_div_5_ng_container_2_app_post_2_Template","PostListComponent_div_5_ng_container_2_span_3_Template","PostListComponent_div_5_ng_container_2_span_4_Template","PostListComponent_div_5_ng_container_2_div_5_Template","type","PostListComponent_div_5_ng_container_1_Template","PostListComponent_div_5_ng_container_2_Template","listItems_r8","slice","ctx_r2","listItemTrackBy","PostListComponent_app_read_post_9_Template_app_read_post_close_0_listener","_r60","ctx_r59","closePostToRead","ctx_r5","postToRead","service","selectedPostId","route","markdownService","isLoading","posts$","params","slug","seriesSlug","init","l","tripleMoon$","getTripleMoon","randomComedy$","getRandomPostByTag","randomOther$","reloadLinkies$","refCount","bufferSize","refreshLinks","next","i","html","renderPostText","replace","nextPage","getPostOrSeriesUrl","item","id","event","url","go","which","stopPropagation","open","index","page","PostListStateService","i3","i4","ActivatedRoute","i5","MarkdownServiceService","decls","vars","consts","template","PostListComponent_Template","PostListComponent_div_0_Template","PostListComponent_div_4_Template","PostListComponent_div_5_Template","PostListComponent_ng_template_7_Template","PostListComponent_app_read_post_9_Template","_r3","outStyle","inStyle","durationMs","changeDetection","PostSeriesComponent_ng_container_0_div_1_div_1_div_1_p_4_Template_a_click_3_listener","_r11","series_r3","nextPost","ctx_r8","nextPostTitle","PostSeriesComponent_ng_container_0_div_1_div_1_div_1_p_4_Template","currentPartNumber","partList","PostSeriesComponent_ng_container_0_div_1_div_1_ng_container_6_a_1_Template_a_click_0_listener","part_r13","gotoPost","ɵɵclassProp","post_r1","label","PostSeriesComponent_ng_container_0_div_1_div_1_ng_container_6_a_1_Template","PostSeriesComponent_ng_container_0_div_1_div_1_ng_container_6_span_2_Template","PostSeriesComponent_ng_container_0_div_1_div_1_div_1_Template","PostSeriesComponent_ng_container_0_div_1_div_1_Template_h2_click_2_listener","_r24","ctx_r22","goToSeries","PostSeriesComponent_ng_container_0_div_1_div_1_p_4_Template","PostSeriesComponent_ng_container_0_div_1_div_1_ng_container_6_Template","ctx_r4","extended","PostSeriesComponent_ng_container_0_div_1_div_1_Template","ɵɵclassMapInterpolate1","postClassName","PostSeriesComponent_ng_container_0_div_1_Template","ctx_r0","series$","MOBILE_WIDTH","className","postStateService","changeDetectorRef","post$","selection$","innerWidth","p","findIndex","ChangeDetectorRef","hostVars","hostBindings","PostSeriesComponent_HostBindings","PostSeriesComponent_ng_container_0_Template","UntypedFormControl","UntypedFormGroup","Validators","survey_description","option_r10","ɵɵpureFunction2","_c1","ɵɵpureFunction1","_c0","ctx_r12","optionVoteCount","totalVotes","PostSurveyComponent_ng_container_4_li_4_Template_li_click_0_listener","_r16","ctx_r15","select","PostSurveyComponent_ng_container_4_li_4_div_2_Template","PostSurveyComponent_ng_container_4_li_4_div_3_Template","ctx_r7","selectedOptionId","text","custom","showResults","CUSTOM_OPTION_ID","addOptionFormGroup","controls","value","PostSurveyComponent_ng_container_4_button_6_Template_button_click_0_listener","ctx_r17","submit","isSubmitValid","PostSurveyComponent_ng_container_4_li_4_Template","PostSurveyComponent_ng_container_4_li_5_Template","PostSurveyComponent_ng_container_4_button_6_Template","ctx_r3","prompt","options_r6","survey_allows_custom_answers","VOTE_LS_KEY","required","maxLength","valueChanges","isSurveyOpen","survey_expires","survey_open_prompt","survey_closed_prompt","valid","voteLocalStorageKey","ngOnInit","options$","fetchSurveyOptions","options","console","log","option","votes","existingVote","JSON","parse","localStorage","getItem","detectChanges","reset","createSurveyOption","newOption","setItem","stringify","createSurveyVote","newVote","inputs","PostSurveyComponent_Template","PostSurveyComponent_h3_0_Template","PostSurveyComponent_h3_1_Template","PostSurveyComponent_p_3_Template","PostSurveyComponent_ng_container_4_Template","PostSurveyComponent_ng_template_6_Template","_r4","width","delayMs","height","overflow","EventEmitter","image","ɵɵsanitizeUrl","PostComponent_div_8_Template_span_click_1_listener","_r12","ctx_r11","goHome","PostComponent_div_8_Template_span_click_3_listener","ctx_r13","readPost","renderSummary","PostComponent_div_10_div_1_Template","PostComponent_div_10_Template_h3_appear_3_listener","commentsAppear","shouldShowDisclaimer","renderText","ɵɵelementContainer","PostComponent_ng_container_13_div_1_div_1_ng_container_5_ng_container_1_Template","_r9","comment_r24","PostComponent_ng_container_13_div_1_div_1_ng_container_6_ng_container_1_Template","createdComment","PostComponent_ng_container_13_div_1_div_1_div_4_Template","PostComponent_ng_container_13_div_1_div_1_ng_container_5_Template","PostComponent_ng_container_13_div_1_div_1_ng_container_6_Template","PostComponent_ng_container_13_div_1_div_1_Template_button_click_23_listener","_r28","ctx_r27","submitComment","comments_r18","commentFormGroup","PostComponent_ng_container_13_div_1_div_1_Template","selected","PostComponent_ng_container_13_div_1_Template","comments$","comment_r30","ctx_r10","renderMarkdown","postListService","read","showComments","goBack","commentText","scrollHeight","convert","comment","toISOString","createComment","fetchComments","loadSimilarPosts","getTime","PostComponent_Query","PostComponent_div_7_Template","PostComponent_div_8_Template","PostComponent_div_9_Template","PostComponent_div_10_Template","PostComponent_app_post_survey_11_Template","PostComponent_app_post_series_12_Template","PostComponent_ng_container_13_Template","PostComponent_ng_template_14_Template","PostComponent_ng_template_16_Template","page_r3","outerHTML","ReadPostComponent_ng_container_1_div_1_Template","i_r4","ctx_r1","selectedPageIndex","pageContent","closeEvent","viewableArea","layoutPage","querySelector","document","createElement","viewableHeight","clientHeight","ngAfterViewInit","body","classList","add","postContent","innerHTML","currentIterationTarget","loopThroughChildNodes","push","cloneNode","markdown","decodeString","close","remove","prevPage","isCurrentTargetOut","source","childNodes","forEach","child","nodeValue","trim","nodeType","tagName","Node","TEXT_NODE","words","textContent","split","wordsToUse","shift","join","unshift","pop","nextParent","parentElement","count","contains","newNextParent","appendChild","newChild","append","hasChildNodes","clone","string","ReadPostComponent_Query","ReadPostComponent_div_0_Template","ReadPostComponent_ng_container_1_Template","ReadPostComponent_Template_button_click_4_listener","ReadPostComponent_Template_button_click_6_listener","ReadPostComponent_Template_button_click_8_listener","intercept","req","csrfCookie","cookie","cookies","find","indexOf","newReq","setHeaders","handle","factory","ɵfac","timer","scrollToTop","pageIndex","selectedPostId_","postSelectionSubject","asObservable","seriesSubject","postListSubject","onUrlChange","state","postsRegex","seriesRegex","match","fetchPostById","fetchPost","broadcast","showSeries","postSlug","showList","more","loadingSimilar","similars","items","concat","selectedPostSlug","selectedSeriesSlug","nextPageIndex","pages","cnt","fetchPage","pageSubscription","pageData","reduce","last","current","fetchSimilarPosts","resetSubscriptions","unsubscribe","seriesSubscription","fetchSeries","delay","fetchSeriesForPost","ɵɵinject","providedIn","of","environment","http","POST_URL","server","SERIES_URL","TAGS_URL","totalPosts","pageToPosts","Map","loadedPosts","postSlugs","seriesCache","seriesSlugs","seriesToPost","set","rememberPost","has","postId","get","response","postsOnThisPage","results","tag","tags","includes","textArea","clean","rememberSeries","newOptionDeets","optionId","meta","survey_option","HttpClient","animate","AUTO_STYLE","transition","trigger","duration","inString","outString","Converter","mdConverter","setOption","makeHtml","field","InjectionToken","filter","SCROLL_CONTAINER_SELECTOR","ScrollTrackerDirective","container","scrollSelector","elementRef","scrollTracker","appear","appeared","element","scrollSubscription","scrollTop","innerHeight","offsetTop","dispatchEvent","Event","ngOnDestroy","ElementRef","outputs","CommonModule","UnsafeInnerHTMLDirective","useValue","scrollTo","to","maxScroll","from","difference","Math","min","abs","easeInOutQuad","t","b","c","d","reverse","s","val","startTime","scrollFunc","scroll","requestAnimationFrame","unsafeInnerHTML","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}